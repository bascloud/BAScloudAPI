name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - v*
      
env:
#  CIBW_TEST_COMMAND: python {project}/tests/test.py
  CIBW_REPAIR_WHEEL_COMMAND_LINUX: "rm -rf /tmp/cibuildwheel/unpacked_wheel && mkdir -p /tmp/cibuildwheel/unpacked_wheel && unzip {wheel} -d /tmp/cibuildwheel/unpacked_wheel && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/cibuildwheel/unpacked_wheel && auditwheel repair -w {dest_dir} {wheel}"

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.16.x'
        
    - name: Use cmake
      run: cmake --version
      
    - uses: actions/checkout@v2
      with:
        submodules: true
        
    - name: Set up QEMU
      if: runner.os == 'linux'
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - uses: joerick/cibuildwheel@v1.12.0
      env:
        # Skip Python 2.7
        #CIBW_SKIP: cp27-win*
        CIBW_SKIP: cp27-*
        CIBW_BEFORE_ALL_LINUX: yum install -y openssl-devel
        CIBW_BEFORE_ALL_MACOS: brew install openssl
        CIBW_ENVIRONMENT_MACOS: "OPENSSL_ROOT_DIR=/usr/local/opt/openssl"
        CIBW_ARCHS_MACOS: x86_64 arm64 universal2
        CIBW_ARCHS_LINUX: auto aarch64

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  # Windows 2.7 (requires workaround for MSVC 2008 replacement)
  build_win27_wheels:
    name: Py 2.7 wheels on Windows
    runs-on: windows-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.16.x'
        
    - name: Use cmake
      run: cmake --version
      
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Build 64-bit wheel
      uses: joerick/cibuildwheel@v1.12.0
      env:
        CIBW_BUILD: cp27-win_amd64
        DISTUTILS_USE_SDK: 1
        MSSdk: 1

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Build 32-bit wheel
      uses: joerick/cibuildwheel@v1.12.0
      env:
        CIBW_BUILD: cp27-win32
        DISTUTILS_USE_SDK: 1
        MSSdk: 1

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_wheels, build_win27_wheels, build_sdist]

    steps:
      - name: Collect sdist and wheels
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: wheelhouse

      - name: Get release name
        id: get_version
        run: |
          echo "::set-output name=version::${GITHUB_REF##refs/tags/v}"
      - name: Upload sdist and wheels to release
        uses: ncipollo/release-action@v1.8.4
        with:
          name: ${{ steps.get_version.outputs.version }}
          draft: true
          artifacts: wheelhouse/*
          token: ${{ secrets.GITHUB_TOKEN }}

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_win27_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: wheelhouse

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        packages_dir: wheelhouse/
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
